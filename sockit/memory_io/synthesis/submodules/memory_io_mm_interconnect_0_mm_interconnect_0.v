// memory_io_mm_interconnect_0_mm_interconnect_0.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 14.1 186 at 2015.05.20.21:57:03

`timescale 1 ps / 1 ps
module memory_io_mm_interconnect_0_mm_interconnect_0 (
		input  wire         clk_0_clk_clock_bridge_out_clk_clk,                                                  //                                          clk_0_clk_clock_bridge_out_clk.clk
		input  wire         io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset,       // io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset.reset
		input  wire [31:0]  io_mem_component_0_avalon_output_translator_avalon_universal_master_0_address,       //   io_mem_component_0_avalon_output_translator_avalon_universal_master_0.address
		input  wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_write,         //                                                                        .write
		input  wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_read,          //                                                                        .read
		input  wire [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_writedata,     //                                                                        .writedata
		output wire [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_readdata,      //                                                                        .readdata
		output wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_waitrequest,   //                                                                        .waitrequest
		output wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_readdatavalid, //                                                                        .readdatavalid
		input  wire [15:0]  io_mem_component_0_avalon_output_translator_avalon_universal_master_0_byteenable,    //                                                                        .byteenable
		input  wire [0:0]   io_mem_component_0_avalon_output_translator_avalon_universal_master_0_burstcount,    //                                                                        .burstcount
		input  wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_debugaccess,   //                                                                        .debugaccess
		input  wire         io_mem_component_0_avalon_output_translator_avalon_universal_master_0_lock,          //                                                                        .lock
		output wire [31:0]  io_mem_component_0_avalon_output_agent_av_address,                                   //                               io_mem_component_0_avalon_output_agent_av.address
		output wire         io_mem_component_0_avalon_output_agent_av_write,                                     //                                                                        .write
		output wire         io_mem_component_0_avalon_output_agent_av_read,                                      //                                                                        .read
		input  wire [127:0] io_mem_component_0_avalon_output_agent_av_readdata,                                  //                                                                        .readdata
		output wire [127:0] io_mem_component_0_avalon_output_agent_av_writedata,                                 //                                                                        .writedata
		output wire [0:0]   io_mem_component_0_avalon_output_agent_av_burstcount,                                //                                                                        .burstcount
		output wire [15:0]  io_mem_component_0_avalon_output_agent_av_byteenable,                                //                                                                        .byteenable
		input  wire         io_mem_component_0_avalon_output_agent_av_readdatavalid,                             //                                                                        .readdatavalid
		input  wire         io_mem_component_0_avalon_output_agent_av_waitrequest,                               //                                                                        .waitrequest
		output wire         io_mem_component_0_avalon_output_agent_av_lock,                                      //                                                                        .lock
		output wire         io_mem_component_0_avalon_output_agent_av_debugaccess                                //                                                                        .debugaccess
	);

	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_waitrequest;                 // io_mem_component_0_avalon_output_agent_av_translator:uav_waitrequest -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_waitrequest
	wire  [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdata;                    // io_mem_component_0_avalon_output_agent_av_translator:uav_readdata -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_readdata
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_debugaccess;                 // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_debugaccess -> io_mem_component_0_avalon_output_agent_av_translator:uav_debugaccess
	wire   [31:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_address;                     // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_address -> io_mem_component_0_avalon_output_agent_av_translator:uav_address
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_read;                        // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_read -> io_mem_component_0_avalon_output_agent_av_translator:uav_read
	wire   [15:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_byteenable;                  // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_byteenable -> io_mem_component_0_avalon_output_agent_av_translator:uav_byteenable
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdatavalid;               // io_mem_component_0_avalon_output_agent_av_translator:uav_readdatavalid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_readdatavalid
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_lock;                        // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_lock -> io_mem_component_0_avalon_output_agent_av_translator:uav_lock
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_write;                       // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_write -> io_mem_component_0_avalon_output_agent_av_translator:uav_write
	wire  [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_writedata;                   // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_writedata -> io_mem_component_0_avalon_output_agent_av_translator:uav_writedata
	wire    [0:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_burstcount;                  // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:uav_burstcount -> io_mem_component_0_avalon_output_agent_av_translator:uav_burstcount
	wire          rsp_mux_src_valid;                                                                                                                      // rsp_mux:src_valid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_valid
	wire  [207:0] rsp_mux_src_data;                                                                                                                       // rsp_mux:src_data -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_data
	wire          rsp_mux_src_ready;                                                                                                                      // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_ready -> rsp_mux:src_ready
	wire    [0:0] rsp_mux_src_channel;                                                                                                                    // rsp_mux:src_channel -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_mux_src_startofpacket;                                                                                                              // rsp_mux:src_startofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire          rsp_mux_src_endofpacket;                                                                                                                // rsp_mux:src_endofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire  [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdata;                // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_readdata -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_readdata
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_waitrequest;             // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_waitrequest -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_waitrequest
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_debugaccess;             // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_debugaccess -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_debugaccess
	wire   [31:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_address;                 // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_address -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_address
	wire   [15:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_byteenable;              // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_byteenable -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_byteenable
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_read;                    // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_read -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_read
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdatavalid;           // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_readdatavalid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_readdatavalid
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_lock;                    // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_lock -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_lock
	wire  [127:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_writedata;               // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_writedata -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_writedata
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_write;                   // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_write -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_write
	wire    [0:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_burstcount;              // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:m0_burstcount -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator:av_burstcount
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_valid;            // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_source_valid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:in_valid
	wire  [208:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_data;             // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_source_data -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:in_data
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_ready;            // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:in_ready -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_source_ready
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_startofpacket;    // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_source_startofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:in_startofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_endofpacket;      // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_source_endofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:in_endofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_valid;         // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:out_valid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_sink_valid
	wire  [208:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_data;          // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:out_data -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_sink_data
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_ready;         // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_sink_ready -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:out_ready
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_startofpacket; // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:out_startofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_sink_startofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_endofpacket;   // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo:out_endofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rf_sink_endofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_valid;       // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_src_valid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_sink_valid
	wire  [129:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_data;        // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_src_data -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_sink_data
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_ready;       // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_sink_ready -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rdata_fifo_src_ready
	wire          cmd_mux_src_valid;                                                                                                                      // cmd_mux:src_valid -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_valid
	wire  [207:0] cmd_mux_src_data;                                                                                                                       // cmd_mux:src_data -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_data
	wire          cmd_mux_src_ready;                                                                                                                      // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_ready -> cmd_mux:src_ready
	wire    [0:0] cmd_mux_src_channel;                                                                                                                    // cmd_mux:src_channel -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_channel
	wire          cmd_mux_src_startofpacket;                                                                                                              // cmd_mux:src_startofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_startofpacket
	wire          cmd_mux_src_endofpacket;                                                                                                                // cmd_mux:src_endofpacket -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:cp_endofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_valid;                                                   // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:cp_valid -> router:sink_valid
	wire  [207:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_data;                                                    // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:cp_data -> router:sink_data
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_ready;                                                   // router:sink_ready -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:cp_ready
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_startofpacket;                                           // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:cp_startofpacket -> router:sink_startofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_endofpacket;                                             // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent:cp_endofpacket -> router:sink_endofpacket
	wire          router_src_valid;                                                                                                                       // router:src_valid -> cmd_demux:sink_valid
	wire  [207:0] router_src_data;                                                                                                                        // router:src_data -> cmd_demux:sink_data
	wire          router_src_ready;                                                                                                                       // cmd_demux:sink_ready -> router:src_ready
	wire    [0:0] router_src_channel;                                                                                                                     // router:src_channel -> cmd_demux:sink_channel
	wire          router_src_startofpacket;                                                                                                               // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire          router_src_endofpacket;                                                                                                                 // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_valid;                   // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rp_valid -> router_001:sink_valid
	wire  [207:0] io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_data;                    // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rp_data -> router_001:sink_data
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_ready;                   // router_001:sink_ready -> io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rp_ready
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_startofpacket;           // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rp_startofpacket -> router_001:sink_startofpacket
	wire          io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_endofpacket;             // io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent:rp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                                                                                                   // router_001:src_valid -> rsp_demux:sink_valid
	wire  [207:0] router_001_src_data;                                                                                                                    // router_001:src_data -> rsp_demux:sink_data
	wire          router_001_src_ready;                                                                                                                   // rsp_demux:sink_ready -> router_001:src_ready
	wire    [0:0] router_001_src_channel;                                                                                                                 // router_001:src_channel -> rsp_demux:sink_channel
	wire          router_001_src_startofpacket;                                                                                                           // router_001:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_001_src_endofpacket;                                                                                                             // router_001:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          cmd_demux_src0_valid;                                                                                                                   // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [207:0] cmd_demux_src0_data;                                                                                                                    // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire          cmd_demux_src0_ready;                                                                                                                   // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire    [0:0] cmd_demux_src0_channel;                                                                                                                 // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire          cmd_demux_src0_startofpacket;                                                                                                           // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire          cmd_demux_src0_endofpacket;                                                                                                             // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire          rsp_demux_src0_valid;                                                                                                                   // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [207:0] rsp_demux_src0_data;                                                                                                                    // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire          rsp_demux_src0_ready;                                                                                                                   // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire    [0:0] rsp_demux_src0_channel;                                                                                                                 // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire          rsp_demux_src0_startofpacket;                                                                                                           // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire          rsp_demux_src0_endofpacket;                                                                                                             // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (32),
		.AV_DATA_W                   (128),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (16),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (1),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (16),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (1),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator (
		.clk                    (clk_0_clk_clock_bridge_out_clk_clk),                                                                                           //                       clk.clk
		.reset                  (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                                                //                     reset.reset
		.uav_address            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_address),           // avalon_universal_master_0.address
		.uav_burstcount         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_burstcount),        //                          .burstcount
		.uav_read               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_read),              //                          .read
		.uav_write              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_write),             //                          .write
		.uav_waitrequest        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_waitrequest),       //                          .waitrequest
		.uav_readdatavalid      (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdatavalid),     //                          .readdatavalid
		.uav_byteenable         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_byteenable),        //                          .byteenable
		.uav_readdata           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdata),          //                          .readdata
		.uav_writedata          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_writedata),         //                          .writedata
		.uav_lock               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_lock),              //                          .lock
		.uav_debugaccess        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_debugaccess),       //                          .debugaccess
		.av_address             (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_address),       //      avalon_anti_master_0.address
		.av_waitrequest         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_waitrequest),   //                          .waitrequest
		.av_burstcount          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_burstcount),    //                          .burstcount
		.av_byteenable          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_byteenable),    //                          .byteenable
		.av_read                (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_read),          //                          .read
		.av_readdata            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdata),      //                          .readdata
		.av_readdatavalid       (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdatavalid), //                          .readdatavalid
		.av_write               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_write),         //                          .write
		.av_writedata           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_writedata),     //                          .writedata
		.av_lock                (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_lock),          //                          .lock
		.av_debugaccess         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_debugaccess),   //                          .debugaccess
		.av_beginbursttransfer  (1'b0),                                                                                                                         //               (terminated)
		.av_begintransfer       (1'b0),                                                                                                                         //               (terminated)
		.av_chipselect          (1'b0),                                                                                                                         //               (terminated)
		.uav_clken              (),                                                                                                                             //               (terminated)
		.av_clken               (1'b1),                                                                                                                         //               (terminated)
		.uav_response           (2'b00),                                                                                                                        //               (terminated)
		.av_response            (),                                                                                                                             //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                                                                         //               (terminated)
		.av_writeresponsevalid  ()                                                                                                                              //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (32),
		.AV_DATA_W                      (128),
		.UAV_DATA_W                     (128),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (16),
		.UAV_BYTEENABLE_W               (16),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (16),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (1),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) io_mem_component_0_avalon_output_agent_av_translator (
		.clk                    (clk_0_clk_clock_bridge_out_clk_clk),                                                                                       //                      clk.clk
		.reset                  (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                                            //                    reset.reset
		.uav_address            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_burstcount),    //                         .burstcount
		.uav_read               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_read),          //                         .read
		.uav_write              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_write),         //                         .write
		.uav_waitrequest        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_byteenable),    //                         .byteenable
		.uav_readdata           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_readdata),      //                         .readdata
		.uav_writedata          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_writedata),     //                         .writedata
		.uav_lock               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_lock),          //                         .lock
		.uav_debugaccess        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_universal_master_0_debugaccess),   //                         .debugaccess
		.av_address             (io_mem_component_0_avalon_output_agent_av_address),                                                                        //      avalon_anti_slave_0.address
		.av_write               (io_mem_component_0_avalon_output_agent_av_write),                                                                          //                         .write
		.av_read                (io_mem_component_0_avalon_output_agent_av_read),                                                                           //                         .read
		.av_readdata            (io_mem_component_0_avalon_output_agent_av_readdata),                                                                       //                         .readdata
		.av_writedata           (io_mem_component_0_avalon_output_agent_av_writedata),                                                                      //                         .writedata
		.av_burstcount          (io_mem_component_0_avalon_output_agent_av_burstcount),                                                                     //                         .burstcount
		.av_byteenable          (io_mem_component_0_avalon_output_agent_av_byteenable),                                                                     //                         .byteenable
		.av_readdatavalid       (io_mem_component_0_avalon_output_agent_av_readdatavalid),                                                                  //                         .readdatavalid
		.av_waitrequest         (io_mem_component_0_avalon_output_agent_av_waitrequest),                                                                    //                         .waitrequest
		.av_lock                (io_mem_component_0_avalon_output_agent_av_lock),                                                                           //                         .lock
		.av_debugaccess         (io_mem_component_0_avalon_output_agent_av_debugaccess),                                                                    //                         .debugaccess
		.av_begintransfer       (),                                                                                                                         //              (terminated)
		.av_beginbursttransfer  (),                                                                                                                         //              (terminated)
		.av_writebyteenable     (),                                                                                                                         //              (terminated)
		.av_chipselect          (),                                                                                                                         //              (terminated)
		.av_clken               (),                                                                                                                         //              (terminated)
		.uav_clken              (1'b0),                                                                                                                     //              (terminated)
		.av_outputenable        (),                                                                                                                         //              (terminated)
		.uav_response           (),                                                                                                                         //              (terminated)
		.av_response            (2'b00),                                                                                                                    //              (terminated)
		.uav_writeresponsevalid (),                                                                                                                         //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (207),
		.PKT_ORI_BURST_SIZE_L      (205),
		.PKT_RESPONSE_STATUS_H     (204),
		.PKT_RESPONSE_STATUS_L     (203),
		.PKT_QOS_H                 (192),
		.PKT_QOS_L                 (192),
		.PKT_DATA_SIDEBAND_H       (190),
		.PKT_DATA_SIDEBAND_L       (190),
		.PKT_ADDR_SIDEBAND_H       (189),
		.PKT_ADDR_SIDEBAND_L       (189),
		.PKT_BURST_TYPE_H          (188),
		.PKT_BURST_TYPE_L          (187),
		.PKT_CACHE_H               (202),
		.PKT_CACHE_L               (199),
		.PKT_THREAD_ID_H           (195),
		.PKT_THREAD_ID_L           (195),
		.PKT_BURST_SIZE_H          (186),
		.PKT_BURST_SIZE_L          (184),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_BEGIN_BURST           (191),
		.PKT_PROTECTION_H          (198),
		.PKT_PROTECTION_L          (196),
		.PKT_BURSTWRAP_H           (183),
		.PKT_BURSTWRAP_L           (183),
		.PKT_BYTE_CNT_H            (182),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (193),
		.PKT_SRC_ID_L              (193),
		.PKT_DEST_ID_H             (194),
		.PKT_DEST_ID_L             (194),
		.ST_DATA_W                 (208),
		.ST_CHANNEL_W              (1),
		.AV_BURSTCOUNT_W           (1),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent (
		.clk                   (clk_0_clk_clock_bridge_out_clk_clk),                                                           //       clk.clk
		.reset                 (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.av_address            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_address),                //        av.address
		.av_write              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_write),                  //          .write
		.av_read               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid      (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data               (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket      (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid              (rsp_mux_src_valid),                                                                            //        rp.valid
		.rp_data               (rsp_mux_src_data),                                                                             //          .data
		.rp_channel            (rsp_mux_src_channel),                                                                          //          .channel
		.rp_startofpacket      (rsp_mux_src_startofpacket),                                                                    //          .startofpacket
		.rp_endofpacket        (rsp_mux_src_endofpacket),                                                                      //          .endofpacket
		.rp_ready              (rsp_mux_src_ready),                                                                            //          .ready
		.av_response           (),                                                                                             // (terminated)
		.av_writeresponsevalid ()                                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (207),
		.PKT_ORI_BURST_SIZE_L      (205),
		.PKT_RESPONSE_STATUS_H     (204),
		.PKT_RESPONSE_STATUS_L     (203),
		.PKT_BURST_SIZE_H          (186),
		.PKT_BURST_SIZE_L          (184),
		.PKT_TRANS_LOCK            (180),
		.PKT_BEGIN_BURST           (191),
		.PKT_PROTECTION_H          (198),
		.PKT_PROTECTION_L          (196),
		.PKT_BURSTWRAP_H           (183),
		.PKT_BURSTWRAP_L           (183),
		.PKT_BYTE_CNT_H            (182),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (193),
		.PKT_SRC_ID_L              (193),
		.PKT_DEST_ID_H             (194),
		.PKT_DEST_ID_L             (194),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (1),
		.ST_DATA_W                 (208),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent (
		.clk                     (clk_0_clk_clock_bridge_out_clk_clk),                                                                                                     //             clk.clk
		.reset                   (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                                                          //       clk_reset.reset
		.m0_address              (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_writedata),               //                .writedata
		.m0_write                (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_ready),                   //                .ready
		.rp_valid                (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_valid),                   //                .valid
		.rp_data                 (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_src_ready),                                                                                                                      //              cp.ready
		.cp_valid                (cmd_mux_src_valid),                                                                                                                      //                .valid
		.cp_data                 (cmd_mux_src_data),                                                                                                                       //                .data
		.cp_startofpacket        (cmd_mux_src_startofpacket),                                                                                                              //                .startofpacket
		.cp_endofpacket          (cmd_mux_src_endofpacket),                                                                                                                //                .endofpacket
		.cp_channel              (cmd_mux_src_channel),                                                                                                                    //                .channel
		.rf_sink_ready           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (209),
		.FIFO_DEPTH          (65),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clock_bridge_out_clk_clk),                                                                                                     //       clk.clk
		.reset             (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                                                          // clk_reset.reset
		.in_data           (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_data),             //        in.data
		.in_valid          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_valid),            //          .valid
		.in_ready          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                                                                   // (terminated)
		.csr_readdata      (),                                                                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                                                   // (terminated)
		.almost_full_data  (),                                                                                                                                       // (terminated)
		.almost_empty_data (),                                                                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                                                                   // (terminated)
		.out_empty         (),                                                                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                                                                   // (terminated)
		.out_error         (),                                                                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                                                                   // (terminated)
		.out_channel       ()                                                                                                                                        // (terminated)
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_router router (
		.sink_ready         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clock_bridge_out_clk_clk),                                                           //       clk.clk
		.reset              (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (router_src_ready),                                                                             //       src.ready
		.src_valid          (router_src_valid),                                                                             //          .valid
		.src_data           (router_src_data),                                                                              //          .data
		.src_channel        (router_src_channel),                                                                           //          .channel
		.src_startofpacket  (router_src_startofpacket),                                                                     //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                                                                        //          .endofpacket
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_router_001 router_001 (
		.sink_ready         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_valid),         //          .valid
		.sink_data          (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_data),          //          .data
		.sink_startofpacket (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (io_mem_component_0_avalon_output_translator_avalon_universal_master_0_translator_avalon_anti_master_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clock_bridge_out_clk_clk),                                                                                           //       clk.clk
		.reset              (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset),                                                // clk_reset.reset
		.src_ready          (router_001_src_ready),                                                                                                         //       src.ready
		.src_valid          (router_001_src_valid),                                                                                                         //          .valid
		.src_data           (router_001_src_data),                                                                                                          //          .data
		.src_channel        (router_001_src_channel),                                                                                                       //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                                                                                                 //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                                                                                                    //          .endofpacket
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_cmd_demux cmd_demux (
		.clk                (clk_0_clk_clock_bridge_out_clk_clk),                                            //       clk.clk
		.reset              (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_src_ready),                                                              //      sink.ready
		.sink_channel       (router_src_channel),                                                            //          .channel
		.sink_data          (router_src_data),                                                               //          .data
		.sink_startofpacket (router_src_startofpacket),                                                      //          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                                                        //          .endofpacket
		.sink_valid         (router_src_valid),                                                              //          .valid
		.src0_ready         (cmd_demux_src0_ready),                                                          //      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                                                          //          .valid
		.src0_data          (cmd_demux_src0_data),                                                           //          .data
		.src0_channel       (cmd_demux_src0_channel),                                                        //          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                                                  //          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket)                                                     //          .endofpacket
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_cmd_mux cmd_mux (
		.clk                 (clk_0_clk_clock_bridge_out_clk_clk),                                            //       clk.clk
		.reset               (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                                             //       src.ready
		.src_valid           (cmd_mux_src_valid),                                                             //          .valid
		.src_data            (cmd_mux_src_data),                                                              //          .data
		.src_channel         (cmd_mux_src_channel),                                                           //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                                                     //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                                                       //          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                                                          //     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                                                          //          .valid
		.sink0_channel       (cmd_demux_src0_channel),                                                        //          .channel
		.sink0_data          (cmd_demux_src0_data),                                                           //          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                                                  //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket)                                                     //          .endofpacket
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_cmd_demux rsp_demux (
		.clk                (clk_0_clk_clock_bridge_out_clk_clk),                                            //       clk.clk
		.reset              (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                                                          //      sink.ready
		.sink_channel       (router_001_src_channel),                                                        //          .channel
		.sink_data          (router_001_src_data),                                                           //          .data
		.sink_startofpacket (router_001_src_startofpacket),                                                  //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                                                    //          .endofpacket
		.sink_valid         (router_001_src_valid),                                                          //          .valid
		.src0_ready         (rsp_demux_src0_ready),                                                          //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                                          //          .valid
		.src0_data          (rsp_demux_src0_data),                                                           //          .data
		.src0_channel       (rsp_demux_src0_channel),                                                        //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                                                  //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket)                                                     //          .endofpacket
	);

	memory_io_mm_interconnect_0_mm_interconnect_0_rsp_mux rsp_mux (
		.clk                 (clk_0_clk_clock_bridge_out_clk_clk),                                            //       clk.clk
		.reset               (io_mem_component_0_avalon_output_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                                                             //       src.ready
		.src_valid           (rsp_mux_src_valid),                                                             //          .valid
		.src_data            (rsp_mux_src_data),                                                              //          .data
		.src_channel         (rsp_mux_src_channel),                                                           //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                                                     //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                                                       //          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                                                          //     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                                                          //          .valid
		.sink0_channel       (rsp_demux_src0_channel),                                                        //          .channel
		.sink0_data          (rsp_demux_src0_data),                                                           //          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                                                  //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket)                                                     //          .endofpacket
	);

endmodule
