
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module sockit(

	//////////// CLOCK //////////
	input 		          		OSC_50_B3B,
	input 		          		OSC_50_B4A,
	input 		          		OSC_50_B5B,
	input 		          		OSC_50_B8A,

	//////////// LED //////////
	output		     [3:0]		LED,

	//////////// KEY //////////
	input 		     [3:0]		KEY,
	input 		          		RESET_n,

	//////////// SW //////////
	input 		     [3:0]		SW,

	//////////// Si5338 //////////
	output		          		SI5338_SCL,
	inout 		          		SI5338_SDA,

	//////////// Temperature //////////
	output		          		TEMP_CS_n,
	output		          		TEMP_DIN,
	input 		          		TEMP_DOUT,
	output		          		TEMP_SCLK,

	//////////// VGA //////////
	output		     [7:0]		VGA_B,
	output		          		VGA_BLANK_n,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_n,
	output		          		VGA_VS,

	//////////// Audio //////////
	input 		          		AUD_ADCDAT,
	inout 		          		AUD_ADCLRCK,
	inout 		          		AUD_BCLK,
	output		          		AUD_DACDAT,
	inout 		          		AUD_DACLRCK,
	output		          		AUD_MUTE,
	output		          		AUD_XCK,

	//////////// I2C for Audio  //////////
	output		          		AUD_I2C_SCLK,
	inout 		          		AUD_I2C_SDAT,

	//////////// IR Receiver //////////
	input 		          		IRDA_RXD,

	//////////// SDRAM //////////
	output		    [14:0]		DDR3_A,
	output		     [2:0]		DDR3_BA,
	output		          		DDR3_CAS_n,
	output		          		DDR3_CK_n,
	output		          		DDR3_CK_p,
	output		          		DDR3_CKE,
	output		          		DDR3_CS_n,
	output		     [3:0]		DDR3_DM,
	inout 		    [31:0]		DDR3_DQ,
	inout 		     [3:0]		DDR3_DQS_n,
	inout 		     [3:0]		DDR3_DQS_p,
	output		          		DDR3_ODT,
	output		          		DDR3_RAS_n,
	output		          		DDR3_RESET_n,
	input 		          		DDR3_RZQ,
	output		          		DDR3_WE_n
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================



endmodule
